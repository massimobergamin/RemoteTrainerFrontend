try{self["workbox:core:5.1.4"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=" :: "+JSON.stringify(t)),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:5.1.4"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n="GET"){this.handler=s(t),this.match=e,this.method=n}}class i extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)},t,s)}}const c=e=>new URL(String(e),location.href).href.replace(new RegExp("^"+location.origin),"");class a{constructor(){this.t=new Map}get routes(){return this.t}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&s.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const{params:n,route:i}=this.findMatchingRoute({url:s,request:e,event:t});let c,a=i&&i.handler;if(!a&&this.s&&(a=this.s),a){try{c=a.handle({url:s,request:e,event:t,params:n})}catch(e){c=Promise.reject(e)}return c instanceof Promise&&this.i&&(c=c.catch(n=>this.i.handle({url:s,request:e,event:t}))),c}}findMatchingRoute({url:e,request:t,event:s}){const n=this.t.get(t.method)||[];for(const i of n){let n;const c=i.match({url:e,request:t,event:s});if(c)return n=c,(Array.isArray(c)&&0===c.length||c.constructor===Object&&0===Object.keys(c).length||"boolean"==typeof c)&&(n=void 0),{route:i,params:n}}return{}}setDefaultHandler(e){this.s=s(e)}setCatchHandler(e){this.i=s(e)}registerRoute(e){this.t.has(e.method)||this.t.set(e.method,[]),this.t.get(e.method).push(e)}unregisterRoute(e){if(!this.t.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this.t.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this.t.get(e.method).splice(s,1)}}let r;const o=()=>(r||(r=new a,r.addFetchListener(),r.addCacheListener()),r);function h(e,s,c){let a;if("string"==typeof e){const t=new URL(e,location.href);a=new n(({url:e})=>e.href===t.href,s,c)}else if(e instanceof RegExp)a=new i(e,s,c);else if("function"==typeof e)a=new n(e,s,c);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});a=e}return o().registerRoute(a),a}const u={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},l=e=>[u.prefix,e,u.suffix].filter(e=>e&&e.length>0).join("-"),f=e=>e||l(u.precache),d=e=>e||l(u.runtime);function w(e){e.then(()=>{})}const p=new Set;class g{constructor(e,t,{onupgradeneeded:s,onversionchange:n}={}){this.o=null,this.h=e,this.u=t,this.l=s,this.p=n||(()=>this.close())}get db(){return this.o}async open(){if(!this.o)return this.o=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this.h,this.u);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),n.result.close()):"function"==typeof this.l&&this.l(e)},n.onsuccess=()=>{const t=n.result;s?t.close():(t.onversionchange=this.p.bind(this),e(t))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(e=>e.key)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:i,includeKeys:c=!1}={}){return await this.transaction([e],"readonly",(a,r)=>{const o=a.objectStore(e),h=t?o.index(t):o,u=[],l=h.openCursor(s,n);l.onsuccess=()=>{const e=l.result;e?(u.push(c?e:e.value),i&&u.length>=i?r(u):e.continue()):r(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,i)=>{const c=this.o.transaction(e,t);c.onabort=()=>i(c.error),c.oncomplete=()=>n(),s(c,e=>n(e))})}async g(e,t,s,...n){return await this.transaction([t],s,(s,i)=>{const c=s.objectStore(t),a=c[e].apply(c,n);a.onsuccess=()=>i(a.result)})}close(){this.o&&(this.o.close(),this.o=null)}}g.prototype.OPEN_TIMEOUT=2e3;const y={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(y))for(const s of t)s in IDBObjectStore.prototype&&(g.prototype[s]=async function(t,...n){return await this.g(s,t,e,...n)});try{self["workbox:expiration:5.1.4"]&&_()}catch(e){}const m=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class b{constructor(e){this.m=e,this.o=new g("workbox-expiration",1,{onupgradeneeded:e=>this.v(e)})}v(e){const t=e.target.result.createObjectStore("cache-entries",{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1}),(async e=>{await new Promise((t,s)=>{const n=indexedDB.deleteDatabase(e);n.onerror=()=>{s(n.error)},n.onblocked=()=>{s(new Error("Delete blocked"))},n.onsuccess=()=>{t()}})})(this.m)}async setTimestamp(e,t){const s={url:e=m(e),timestamp:t,cacheName:this.m,id:this.q(e)};await this.o.put("cache-entries",s)}async getTimestamp(e){return(await this.o.get("cache-entries",this.q(e))).timestamp}async expireEntries(e,t){const s=await this.o.transaction("cache-entries","readwrite",(s,n)=>{const i=s.objectStore("cache-entries").index("timestamp").openCursor(null,"prev"),c=[];let a=0;i.onsuccess=()=>{const s=i.result;if(s){const n=s.value;n.cacheName===this.m&&(e&&n.timestamp<e||t&&a>=t?c.push(s.value):a++),s.continue()}else n(c)}}),n=[];for(const e of s)await this.o.delete("cache-entries",e.id),n.push(e.url);return n}q(e){return this.m+"|"+m(e)}}class v{constructor(e,t={}){this.R=!1,this._=!1,this.U=t.maxEntries,this.k=t.maxAgeSeconds,this.m=e,this.L=new b(e)}async expireEntries(){if(this.R)return void(this._=!0);this.R=!0;const e=this.k?Date.now()-1e3*this.k:0,t=await this.L.expireEntries(e,this.U),s=await self.caches.open(this.m);for(const e of t)await s.delete(e);this.R=!1,this._&&(this._=!1,w(this.expireEntries()))}async updateTimestamp(e){await this.L.setTimestamp(e,Date.now())}async isURLExpired(e){if(this.k){return await this.L.getTimestamp(e)<Date.now()-1e3*this.k}return!1}async delete(){this._=!1,await this.L.expireEntries(1/0)}}class q{constructor(e={}){var t;this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:n})=>{if(!n)return null;const i=this.N(n),c=this.j(s);w(c.expireEntries());const a=c.updateTimestamp(t.url);if(e)try{e.waitUntil(a)}catch(e){}return i?n:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this.j(e);await s.updateTimestamp(t.url),await s.expireEntries()},this.O=e,this.k=e.maxAgeSeconds,this.T=new Map,e.purgeOnQuotaError&&(t=()=>this.deleteCacheAndMetadata(),p.add(t))}j(e){if(e===d())throw new t("expire-custom-caches-only");let s=this.T.get(e);return s||(s=new v(e,this.O),this.T.set(e,s)),s}N(e){if(!this.k)return!0;const t=this.P(e);if(null===t)return!0;return t>=Date.now()-1e3*this.k}P(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=new Date(t).getTime();return isNaN(s)?null:s}async deleteCacheAndMetadata(){for(const[e,t]of this.T)await self.caches.delete(e),await t.delete();this.T=new Map}}try{self["workbox:cacheable-response:5.1.4"]&&_()}catch(e){}class x{constructor(e={}){this.M=e.statuses,this.K=e.headers}isResponseCacheable(e){let t=!0;return this.M&&(t=this.M.includes(e.status)),this.K&&t&&(t=Object.keys(this.K).some(t=>e.headers.get(t)===this.K[t])),t}}class R{constructor(e){this.cacheWillUpdate=async({response:e})=>this.D.isResponseCacheable(e)?e:null,this.D=new x(e)}}const U=(e,t)=>e.filter(e=>t in e),k=async({request:e,mode:t,plugins:s=[]})=>{const n=U(s,"cacheKeyWillBeUsed");let i=e;for(const e of n)i=await e.cacheKeyWillBeUsed.call(e,{mode:t,request:i}),"string"==typeof i&&(i=new Request(i));return i},L=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:i=[]})=>{const c=await self.caches.open(e),a=await k({plugins:i,request:t,mode:"read"});let r=await c.match(a,n);for(const t of i)if("cachedResponseWillBeUsed"in t){const i=t.cachedResponseWillBeUsed;r=await i.call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:r,request:a})}return r},N=async({cacheName:e,request:s,response:n,event:i,plugins:a=[],matchOptions:r})=>{const o=await k({plugins:a,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:c(o.url)});const h=await(async({request:e,response:t,event:s,plugins:n=[]})=>{let i=t,c=!1;for(const t of n)if("cacheWillUpdate"in t){c=!0;const n=t.cacheWillUpdate;if(i=await n.call(t,{request:e,response:i,event:s}),!i)break}return c||(i=i&&200===i.status?i:void 0),i||null})({event:i,plugins:a,response:n,request:o});if(!h)return;const u=await self.caches.open(e),l=U(a,"cacheDidUpdate"),f=l.length>0?await L({cacheName:e,matchOptions:r,request:o}):null;try{await u.put(o,h)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of p)await e()}(),e}for(const t of l)await t.cacheDidUpdate.call(t,{cacheName:e,event:i,oldResponse:f,newResponse:h,request:o})},j=L,E=async({request:e,fetchOptions:s,event:n,plugins:i=[]})=>{if("string"==typeof e&&(e=new Request(e)),n instanceof FetchEvent&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}const c=U(i,"fetchDidFail"),a=c.length>0?e.clone():null;try{for(const t of i)if("requestWillFetch"in t){const s=t.requestWillFetch,i=e.clone();e=await s.call(t,{request:i,event:n})}}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}const r=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of i)"fetchDidSucceed"in e&&(t=await e.fetchDidSucceed.call(e,{event:n,request:r,response:t}));return t}catch(e){for(const t of c)await t.fetchDidFail.call(t,{error:e,event:n,originalRequest:a.clone(),request:r.clone()});throw e}};try{self["workbox:strategies:5.1.4"]&&_()}catch(e){}const O={cacheWillUpdate:async({response:e})=>200===e.status||0===e.status?e:null};let T;async function P(e,t){const s=e.clone(),n={headers:new Headers(s.headers),status:s.status,statusText:s.statusText},i=t?t(n):n,c=function(){if(void 0===T){const e=new Response("");if("body"in e)try{new Response(e.body),T=!0}catch(e){T=!1}T=!1}return T}()?s.body:await s.blob();return new Response(c,i)}try{self["workbox:precaching:5.1.4"]&&_()}catch(e){}function M(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location.href);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location.href);return{cacheKey:e.href,url:e.href}}const i=new URL(n,location.href),c=new URL(n,location.href);return i.searchParams.set("__WB_REVISION__",s),{cacheKey:i.href,url:c.href}}class K{constructor(e){this.m=f(e),this.C=new Map,this.I=new Map,this.S=new Map}addToCacheList(e){const s=[];for(const n of e){"string"==typeof n?s.push(n):n&&void 0===n.revision&&s.push(n.url);const{cacheKey:e,url:i}=M(n),c="string"!=typeof n&&n.revision?"reload":"default";if(this.C.has(i)&&this.C.get(i)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this.C.get(i),secondEntry:e});if("string"!=typeof n&&n.integrity){if(this.S.has(e)&&this.S.get(e)!==n.integrity)throw new t("add-to-cache-list-conflicting-integrities",{url:i});this.S.set(e,n.integrity)}if(this.C.set(i,e),this.I.set(i,c),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}async install({event:e,plugins:t}={}){const s=[],n=[],i=await self.caches.open(this.m),c=await i.keys(),a=new Set(c.map(e=>e.url));for(const[e,t]of this.C)a.has(t)?n.push(e):s.push({cacheKey:t,url:e});const r=s.map(({cacheKey:s,url:n})=>{const i=this.S.get(s),c=this.I.get(n);return this.A({cacheKey:s,cacheMode:c,event:e,integrity:i,plugins:t,url:n})});await Promise.all(r);return{updatedURLs:s.map(e=>e.url),notUpdatedURLs:n}}async activate(){const e=await self.caches.open(this.m),t=await e.keys(),s=new Set(this.C.values()),n=[];for(const i of t)s.has(i.url)||(await e.delete(i),n.push(i.url));return{deletedURLs:n}}async A({cacheKey:e,url:s,cacheMode:n,event:i,plugins:c,integrity:a}){const r=new Request(s,{integrity:a,cache:n,credentials:"same-origin"});let o,h=await E({event:i,plugins:c,request:r});for(const e of c||[])"cacheWillUpdate"in e&&(o=e);if(!(o?await o.cacheWillUpdate({event:i,request:r,response:h}):h.status<400))throw new t("bad-precaching-response",{url:s,status:h.status});h.redirected&&(h=await P(h)),await N({event:i,plugins:c,response:h,request:e===s?r:new Request(e),cacheName:this.m,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this.C}getCachedURLs(){return[...this.C.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this.C.get(t.href)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s){return(await self.caches.open(this.m)).match(s)}}createHandler(e=!0){return async({request:s})=>{try{const e=await this.matchPrecache(s);if(e)return e;throw new t("missing-precache-entry",{cacheName:this.m,url:s instanceof Request?s.url:s})}catch(t){if(e)return fetch(s);throw t}}}createHandlerBoundToURL(e,s=!0){if(!this.getCacheKeyForURL(e))throw new t("non-precached-url",{url:e});const n=this.createHandler(s),i=new Request(e);return()=>n({request:i})}}let D;const C=()=>(D||(D=new K),D);const I=(e,t)=>{const s=C().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:i}={}){const c=new URL(e,location.href);c.hash="",yield c.href;const a=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(c,t);if(yield a.href,s&&a.pathname.endsWith("/")){const e=new URL(a.href);e.pathname+=s,yield e.href}if(n){const e=new URL(a.href);e.pathname+=".html",yield e.href}if(i){const e=i({url:c});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let S=!1;function A(e){S||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n}={})=>{const i=f();self.addEventListener("fetch",c=>{const a=I(c.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!a)return;let r=self.caches.open(i).then(e=>e.match(a)).then(e=>e||fetch(a));c.respondWith(r)})})(e),S=!0)}const H=[],F={get:()=>H,add(e){H.push(...e)}},W=e=>{const t=C(),s=F.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},B=e=>{const t=C();e.waitUntil(t.activate())};var G;self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()}),G={},function(e){C().addToCacheList(e),e.length>0&&(self.addEventListener("install",W),self.addEventListener("activate",B))}([{url:"_next/static/7qiZwDicImP0HHPc0C6O8/_buildManifest.js",revision:"fa55957fc3717bd0101a121a9274dfe8"},{url:"_next/static/7qiZwDicImP0HHPc0C6O8/_ssgManifest.js",revision:"abee47769bf307639ace4945f9cfd4ff"},{url:"_next/static/chunks/19.514640ed737d05f0e352.js",revision:"9c65f2358f31c32d23143df26679933e"},{url:"_next/static/chunks/2c1f7e2e8f25d005b4fcca31727349892379ed33.8e835e91b1b50adea765.js",revision:"16e009e724014c9bd48501f5d9c95e92"},{url:"_next/static/chunks/33a66ed7d12156846b5dc6f17293d2e08690aeb4.6ec393a265ef8e0038dd.js",revision:"57f377334a906f42ed73b745c9eae13c"},{url:"_next/static/chunks/4717478d546f632b45eb05e3d1ab56d1a421559c.55cbc5c4232f4ce36116.js",revision:"d5a33e7b80fb5dc8700af581af15cf7e"},{url:"_next/static/chunks/75fc9c18.46f8ef1c317b30a0f302.js",revision:"4045ee39daa62d5a5e1d7115ad689f90"},{url:"_next/static/chunks/aea5f2397688309d2611885fb9750c50dfeaf60b.c86f232d48538966ad00.js",revision:"60d968ee428e488eb1d0ffbc2ca1dad6"},{url:"_next/static/chunks/c2e2bc19927118fac2ce0fb017a89e3a5ffd62aa.f2c4c7938bb7b5654025.js",revision:"30b7d16181a49c0cb6f3726b3f160a9c"},{url:"_next/static/chunks/commons.64453f3028997c6751d6.js",revision:"5cdb67c8c043896535c0553dbd308c21"},{url:"_next/static/chunks/ff239f9d.530b467d8cd3a80562d8.js",revision:"ed71955a943324527482994486f86cd2"},{url:"_next/static/chunks/framework.1a5e6c0bcaecf178eee2.js",revision:"9e5c77d379de3dcef5d4c66c69f76091"},{url:"_next/static/chunks/main-79a9f0bfd3046d8bf3dd.js",revision:"04d5530dd9007610152b4c8f574c512d"},{url:"_next/static/chunks/pages/_app-019f1050f8d4afcd8c6f.js",revision:"03f4bcedbf04c97b0ce88bad688f0874"},{url:"_next/static/chunks/pages/_error-fe2fcd50e15770548423.js",revision:"db0aeb7afaa615d32acf34603a15ce4d"},{url:"_next/static/chunks/pages/exercise-397480ee511c4c9de684.js",revision:"3a6b11b8928b5c8fbf72373697bd62e1"},{url:"_next/static/chunks/pages/index-09a8b7b65b9479a07b13.js",revision:"5b8961e9ff12c352544330124cd6ad4c"},{url:"_next/static/chunks/pages/session/[id]-0d0a5d102e59fa19946f.js",revision:"031b4cd46e7c86c7520c3e7572774fe3"},{url:"_next/static/chunks/pages/signup-9b6d8b87976b2e56a157.js",revision:"28531b702648e806b4bc362077d11c98"},{url:"_next/static/chunks/pages/videoRoom/[sessionId]-36a308f68e6ed00ed746.js",revision:"9b1c89118a1ba090bb32d2eb9703e6d1"},{url:"_next/static/chunks/polyfills-a119f8eb83dade858dfc.js",revision:"8a249789544cd4e59b594b816adcc27d"},{url:"_next/static/chunks/webpack-4aab86d27116a7416c85.js",revision:"4447dc8ca6c5738ac71bcb9a1b4f7ac5"},{url:"_next/static/css/afd7172b7cfc566ac23d.css",revision:"d41d8cd98f00b204e9800998ecf8427e"},{url:"_next/static/css/eb5d1d3175874ff0ed92.css",revision:"c79e7838cac713fe0e52517bf6d76422"}]),A(G),h(/\.(json|js|css)$/,new class{constructor(e={}){if(this.m=d(e.cacheName),this.H=e.plugins||[],e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.H=t?e.plugins:[O,...e.plugins]}else this.H=[O];this.F=e.fetchOptions,this.W=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));const n=this.B({request:s,event:e});let i,c=await j({cacheName:this.m,request:s,event:e,matchOptions:this.W,plugins:this.H});if(c){if(e)try{e.waitUntil(n)}catch(i){}}else try{c=await n}catch(e){i=e}if(!c)throw new t("no-response",{url:s.url,error:i});return c}async B({request:e,event:t}){const s=await E({request:e,event:t,fetchOptions:this.F,plugins:this.H}),n=N({cacheName:this.m,request:e,response:s.clone(),event:t,plugins:this.H});if(t)try{t.waitUntil(n)}catch(e){}return s}}({cacheName:"weather-cache",plugins:[new q({maxEntries:50,maxAgeSeconds:86400,purgeOnQuotaError:!0}),new R({statuses:[0,200]})]}),"GET"),h(/\.(svg|png|jpe?g)$/,new class{constructor(e={}){this.m=d(e.cacheName),this.H=e.plugins||[],this.F=e.fetchOptions,this.W=e.matchOptions}async handle({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,i=await j({cacheName:this.m,request:s,event:e,matchOptions:this.W,plugins:this.H});if(!i)try{i=await this.B(s,e)}catch(e){n=e}if(!i)throw new t("no-response",{url:s.url,error:n});return i}async B(e,t){const s=await E({request:e,event:t,fetchOptions:this.F,plugins:this.H}),n=s.clone(),i=N({cacheName:this.m,request:e,response:n,event:t,plugins:this.H});if(t)try{t.waitUntil(i)}catch(e){}return s}}({cacheName:"image-cache",plugins:[new q({maxEntries:50,maxAgeSeconds:2592e3,purgeOnQuotaError:!0}),new R({statuses:[0,200]})]}),"GET"),h(/^http:localhost:3000\/api/,new class{constructor(e={}){if(this.m=d(e.cacheName),e.plugins){const t=e.plugins.some(e=>!!e.cacheWillUpdate);this.H=t?e.plugins:[O,...e.plugins]}else this.H=[O];this.G=e.networkTimeoutSeconds||0,this.F=e.fetchOptions,this.W=e.matchOptions}async handle({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const i=[];let c;if(this.G){const{id:t,promise:a}=this.$({request:s,event:e,logs:n});c=t,i.push(a)}const a=this.Z({timeoutId:c,request:s,event:e,logs:n});i.push(a);let r=await Promise.race(i);if(r||(r=await a),!r)throw new t("no-response",{url:s.url});return r}$({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this.J({request:e,event:s}))},1e3*this.G)}),id:n}}async Z({timeoutId:e,request:t,logs:s,event:n}){let i,c;try{c=await E({request:t,event:n,fetchOptions:this.F,plugins:this.H})}catch(e){i=e}if(e&&clearTimeout(e),i||!c)c=await this.J({request:t,event:n});else{const e=c.clone(),s=N({cacheName:this.m,request:t,response:e,event:n,plugins:this.H});if(n)try{n.waitUntil(s)}catch(e){}}return c}J({event:e,request:t}){return j({cacheName:this.m,request:t,event:e,matchOptions:this.W,plugins:this.H})}}({cacheName:"api-cache",networkTimeoutSeconds:10,plugins:[new q({maxEntries:50,maxAgeSeconds:3600,purgeOnQuotaError:!0}),new R({statuses:[0,200]})]}),"GET");
