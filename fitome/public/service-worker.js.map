{"version":3,"file":"service-worker.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-routing/_version.js","node_modules/workbox-routing/utils/constants.js","node_modules/workbox-routing/utils/normalizeHandler.js","node_modules/workbox-routing/Route.js","node_modules/workbox-routing/RegExpRoute.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-routing/Router.js","node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","node_modules/workbox-routing/registerRoute.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/dontWaitFor.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/registerQuotaErrorCallback.js","node_modules/workbox-core/_private/DBWrapper.js","node_modules/workbox-core/_private/deleteDatabase.js","node_modules/workbox-expiration/_version.js","node_modules/workbox-expiration/models/CacheTimestampsModel.js","node_modules/workbox-expiration/CacheExpiration.js","node_modules/workbox-expiration/ExpirationPlugin.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-strategies/_version.js","node_modules/workbox-strategies/utils/messages.js","node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","node_modules/workbox-strategies/NetworkFirst.js","node_modules/workbox-cacheable-response/_version.js","node_modules/workbox-cacheable-response/CacheableResponse.js","node_modules/workbox-cacheable-response/CacheableResponsePlugin.js","node_modules/workbox-strategies/StaleWhileRevalidate.js","node_modules/workbox-strategies/CacheFirst.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","../../../../../../../private/var/folders/hf/356gcrmx20bcyzbqk5k2bmqc0000gn/T/d8352d1fda4aa9aa8aa5b60af991dd17/service-worker.js"],"sourcesContent":["\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\n    // Don't overwrite this value if it's already set.\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\n        self.__WB_DISABLE_DEV_LOGS = false;\n    }\n    let inGroup = false;\n    const methodToColorMap = {\n        debug: `#7f8c8d`,\n        log: `#2ecc71`,\n        warn: `#f39c12`,\n        error: `#c0392b`,\n        groupCollapsed: `#3498db`,\n        groupEnd: null,\n    };\n    const print = function (method, args) {\n        if (self.__WB_DISABLE_DEV_LOGS) {\n            return;\n        }\n        if (method === 'groupCollapsed') {\n            // Safari doesn't print all console.groupCollapsed() arguments:\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                console[method](...args);\n                return;\n            }\n        }\n        const styles = [\n            `background: ${methodToColorMap[method]}`,\n            `border-radius: 0.5em`,\n            `color: white`,\n            `font-weight: bold`,\n            `padding: 2px 0.5em`,\n        ];\n        // When in a group, the workbox prefix is not displayed.\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n        console[method](...logPrefix, ...args);\n        if (method === 'groupCollapsed') {\n            inGroup = true;\n        }\n        if (method === 'groupEnd') {\n            inGroup = false;\n        }\n    };\n    const api = {};\n    const loggerMethods = Object.keys(methodToColorMap);\n    for (const key of loggerMethods) {\n        const method = key;\n        api[method] = (...args) => {\n            print(method, args);\n        };\n    }\n    return api;\n})());\nexport { logger };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return `The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`;\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}` +\n            `${funcName}()' must be of type ${expectedType}.`;\n    },\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\n        if (!expectedClass || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        if (isReturnValueProblem) {\n            return `The return value from ` +\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n                `must be an instance of class ${expectedClass.name}.`;\n        }\n        return `The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\n            `must be an instance of class ${expectedClass.name}.`;\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\n        if (!expectedMethod || !paramName || !moduleName || !className\n            || !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return `${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return `An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`;\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` +\n                `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`;\n    },\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\n        if (!thrownError) {\n            throw new Error(`Unexpected input to ` +\n                `'plugin-error-request-will-fetch', error.`);\n        }\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownError.message}'.`;\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return `You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`;\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return `The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`;\n    },\n    'unregister-route-route-not-registered': () => {\n        return `The route you're trying to unregister was not previously ` +\n            `registered.`;\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return `The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`;\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return `The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`;\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`;\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\n        return `The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`;\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return `You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`;\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return `When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`;\n    },\n    'channel-name-required': () => {\n        return `You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`;\n    },\n    'invalid-responses-are-same-args': () => {\n        return `The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`;\n    },\n    'expire-custom-caches-only': () => {\n        return `You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`;\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return `Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return `The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`;\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return `The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`;\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`;\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return `There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`;\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return `The precaching request for '${url}' failed with an HTTP ` +\n            `status of ${status}.`;\n    },\n    'non-precached-url': ({ url }) => {\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`;\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return `Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`;\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\n    fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, expectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClass'] = expectedClass;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] =\n            `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, expectedClass, details) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\n    hasMethod,\n    isArray,\n    isInstance,\n    isOneOf,\n    isType,\n    isArrayOfClass,\n};\nexport { finalAssertExports as assert };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof module:workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {module:workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * [Route]{@link module:workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * [See the module docs for info.]{@link https://developers.google.com/web/tools/workbox/modules/workbox-routing}\n *\n * @memberof module:workbox-routing\n * @extends module:workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * [handler's]{@link module:workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if ((url.origin !== location.origin) && (result.index !== 0)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp}' only partially matched ` +\n                        `against the cross-origin URL '${url}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * The Router can be used to process a FetchEvent through one or more\n * [Routes]{@link module:workbox-routing.Route} responding  with a Request if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof module:workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n    }\n    /**\n     * @return {Map<string, Array<module:workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle (this is usually\n     *     from a fetch event, but it does not have to be).\n     * @param {FetchEvent} [options.event] The event that triggered the request,\n     *     if applicable.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const { params, route } = this.findMatchingRoute({ url, request, event });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([\n                    `Found a route to handle this request:`, route,\n                ]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`, params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        if (!handler && this._defaultHandler) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler.`);\n            }\n            handler = this._defaultHandler;\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        if (responsePromise instanceof Promise && this._catchHandler) {\n            responsePromise = responsePromise.catch((err) => {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Still include URL here as it will be async from the console group\n                    // and may not make sense without the URL\n                    logger.groupCollapsed(`Error thrown when responding to: ` +\n                        ` ${getFriendlyURL(url)}. Falling back to Catch Handler.`);\n                    logger.error(`Error thrown by:`, route);\n                    logger.error(err);\n                    logger.groupEnd();\n                }\n                return this._catchHandler.handle({ url, request, event });\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request The request to match.\n     * @param {Event} [options.event] The corresponding event (unless N/A).\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, request, event }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(url, URL, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.url',\n            });\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'findMatchingRoute',\n                paramName: 'options.request',\n            });\n        }\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            const matchResult = route.match({ url, request, event });\n            if (matchResult) {\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                params = matchResult;\n                if (Array.isArray(matchResult) && matchResult.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if ((matchResult.constructor === Object &&\n                    Object.keys(matchResult).length === 0)) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setDefaultHandler(handler) {\n        this._defaultHandler = normalizeHandler(handler);\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {module:workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {module:workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call [registerRoute()]{@link module:workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|module:workbox-routing.Route~matchCallback|module:workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {module:workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {module:workbox-routing.Route} The generated `Route`(Useful for\n * unregistering).\n *\n * @memberof module:workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http') ?\n                captureUrl.pathname : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if ((new RegExp(`${wildcards}`)).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if ((url.pathname === captureUrl.pathname) &&\n                    (url.origin !== captureUrl.origin)) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof module:workbox-core\n */\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A class that wraps common IndexedDB functionality in a promise-based API.\n * It exposes all the underlying power and functionality of IndexedDB, but\n * wraps the most commonly used features in a way that's much simpler to use.\n *\n * @private\n */\nexport class DBWrapper {\n    /**\n     * @param {string} name\n     * @param {number} version\n     * @param {Object=} [callback]\n     * @param {!Function} [callbacks.onupgradeneeded]\n     * @param {!Function} [callbacks.onversionchange] Defaults to\n     *     DBWrapper.prototype._onversionchange when not specified.\n     * @private\n     */\n    constructor(name, version, { onupgradeneeded, onversionchange, } = {}) {\n        this._db = null;\n        this._name = name;\n        this._version = version;\n        this._onupgradeneeded = onupgradeneeded;\n        this._onversionchange = onversionchange || (() => this.close());\n    }\n    /**\n     * Returns the IDBDatabase instance (not normally needed).\n     * @return {IDBDatabase|undefined}\n     *\n     * @private\n     */\n    get db() {\n        return this._db;\n    }\n    /**\n     * Opens a connected to an IDBDatabase, invokes any onupgradedneeded\n     * callback, and added an onversionchange callback to the database.\n     *\n     * @return {IDBDatabase}\n     * @private\n     */\n    async open() {\n        if (this._db)\n            return;\n        this._db = await new Promise((resolve, reject) => {\n            // This flag is flipped to true if the timeout callback runs prior\n            // to the request failing or succeeding. Note: we use a timeout instead\n            // of an onblocked handler since there are cases where onblocked will\n            // never never run. A timeout better handles all possible scenarios:\n            // https://github.com/w3c/IndexedDB/issues/223\n            let openRequestTimedOut = false;\n            setTimeout(() => {\n                openRequestTimedOut = true;\n                reject(new Error('The open request was blocked and timed out'));\n            }, this.OPEN_TIMEOUT);\n            const openRequest = indexedDB.open(this._name, this._version);\n            openRequest.onerror = () => reject(openRequest.error);\n            openRequest.onupgradeneeded = (evt) => {\n                if (openRequestTimedOut) {\n                    openRequest.transaction.abort();\n                    openRequest.result.close();\n                }\n                else if (typeof this._onupgradeneeded === 'function') {\n                    this._onupgradeneeded(evt);\n                }\n            };\n            openRequest.onsuccess = () => {\n                const db = openRequest.result;\n                if (openRequestTimedOut) {\n                    db.close();\n                }\n                else {\n                    db.onversionchange = this._onversionchange.bind(this);\n                    resolve(db);\n                }\n            };\n        });\n        return this;\n    }\n    /**\n     * Polyfills the native `getKey()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @return {Array}\n     * @private\n     */\n    async getKey(storeName, query) {\n        return (await this.getAllKeys(storeName, query, 1))[0];\n    }\n    /**\n     * Polyfills the native `getAll()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAll(storeName, query, count) {\n        return await this.getAllMatching(storeName, { query, count });\n    }\n    /**\n     * Polyfills the native `getAllKeys()` method. Note, this is overridden at\n     * runtime if the browser supports the native method.\n     *\n     * @param {string} storeName\n     * @param {*} query\n     * @param {number} count\n     * @return {Array}\n     * @private\n     */\n    async getAllKeys(storeName, query, count) {\n        const entries = await this.getAllMatching(storeName, { query, count, includeKeys: true });\n        return entries.map((entry) => entry.key);\n    }\n    /**\n     * Supports flexible lookup in an object store by specifying an index,\n     * query, direction, and count. This method returns an array of objects\n     * with the signature .\n     *\n     * @param {string} storeName\n     * @param {Object} [opts]\n     * @param {string} [opts.index] The index to use (if specified).\n     * @param {*} [opts.query]\n     * @param {IDBCursorDirection} [opts.direction]\n     * @param {number} [opts.count] The max number of results to return.\n     * @param {boolean} [opts.includeKeys] When true, the structure of the\n     *     returned objects is changed from an array of values to an array of\n     *     objects in the form {key, primaryKey, value}.\n     * @return {Array}\n     * @private\n     */\n    async getAllMatching(storeName, { index, query = null, // IE/Edge errors if query === `undefined`.\n    direction = 'next', count, includeKeys = false, } = {}) {\n        return await this.transaction([storeName], 'readonly', (txn, done) => {\n            const store = txn.objectStore(storeName);\n            const target = index ? store.index(index) : store;\n            const results = [];\n            const request = target.openCursor(query, direction);\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    results.push(includeKeys ? cursor : cursor.value);\n                    if (count && results.length >= count) {\n                        done(results);\n                    }\n                    else {\n                        cursor.continue();\n                    }\n                }\n                else {\n                    done(results);\n                }\n            };\n        });\n    }\n    /**\n     * Accepts a list of stores, a transaction type, and a callback and\n     * performs a transaction. A promise is returned that resolves to whatever\n     * value the callback chooses. The callback holds all the transaction logic\n     * and is invoked with two arguments:\n     *   1. The IDBTransaction object\n     *   2. A `done` function, that's used to resolve the promise when\n     *      when the transaction is done, if passed a value, the promise is\n     *      resolved to that value.\n     *\n     * @param {Array<string>} storeNames An array of object store names\n     *     involved in the transaction.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {!Function} callback\n     * @return {*} The result of the transaction ran by the callback.\n     * @private\n     */\n    async transaction(storeNames, type, callback) {\n        await this.open();\n        return await new Promise((resolve, reject) => {\n            const txn = this._db.transaction(storeNames, type);\n            txn.onabort = () => reject(txn.error);\n            txn.oncomplete = () => resolve();\n            callback(txn, (value) => resolve(value));\n        });\n    }\n    /**\n     * Delegates async to a native IDBObjectStore method.\n     *\n     * @param {string} method The method name.\n     * @param {string} storeName The object store name.\n     * @param {string} type Can be `readonly` or `readwrite`.\n     * @param {...*} args The list of args to pass to the native method.\n     * @return {*} The result of the transaction.\n     * @private\n     */\n    async _call(method, storeName, type, ...args) {\n        const callback = (txn, done) => {\n            const objStore = txn.objectStore(storeName);\n            // TODO(philipwalton): Fix this underlying TS2684 error.\n            // @ts-ignore\n            const request = objStore[method].apply(objStore, args);\n            request.onsuccess = () => done(request.result);\n        };\n        return await this.transaction([storeName], type, callback);\n    }\n    /**\n     * Closes the connection opened by `DBWrapper.open()`. Generally this method\n     * doesn't need to be called since:\n     *   1. It's usually better to keep a connection open since opening\n     *      a new connection is somewhat slow.\n     *   2. Connections are automatically closed when the reference is\n     *      garbage collected.\n     * The primary use case for needing to close a connection is when another\n     * reference (typically in another tab) needs to upgrade it and would be\n     * blocked by the current, open connection.\n     *\n     * @private\n     */\n    close() {\n        if (this._db) {\n            this._db.close();\n            this._db = null;\n        }\n    }\n}\n// Exposed on the prototype to let users modify the default timeout on a\n// per-instance or global basis.\nDBWrapper.prototype.OPEN_TIMEOUT = 2000;\n// Wrap native IDBObjectStore methods according to their mode.\nconst methodsToWrap = {\n    readonly: ['get', 'count', 'getKey', 'getAll', 'getAllKeys'],\n    readwrite: ['add', 'put', 'clear', 'delete'],\n};\nfor (const [mode, methods] of Object.entries(methodsToWrap)) {\n    for (const method of methods) {\n        if (method in IDBObjectStore.prototype) {\n            // Don't use arrow functions here since we're outside of the class.\n            DBWrapper.prototype[method] =\n                async function (storeName, ...args) {\n                    return await this._call(method, storeName, mode, ...args);\n                };\n        }\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Deletes the database.\n * Note: this is exported separately from the DBWrapper module because most\n * usages of IndexedDB in workbox dont need deleting, and this way it can be\n * reused in tests to delete databases without creating DBWrapper instances.\n *\n * @param {string} name The database name.\n * @private\n */\nexport const deleteDatabase = async (name) => {\n    await new Promise((resolve, reject) => {\n        const request = indexedDB.deleteDatabase(name);\n        request.onerror = () => {\n            reject(request.error);\n        };\n        request.onblocked = () => {\n            reject(new Error('Delete blocked'));\n        };\n        request.onsuccess = () => {\n            resolve();\n        };\n    });\n};\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { DBWrapper } from 'workbox-core/_private/DBWrapper.js';\nimport { deleteDatabase } from 'workbox-core/_private/deleteDatabase.js';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst OBJECT_STORE_NAME = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheName;\n        this._db = new DBWrapper(DB_NAME, 1, {\n            onupgradeneeded: (event) => this._handleUpgrade(event),\n        });\n    }\n    /**\n     * Should perform an upgrade of indexedDB.\n     *\n     * @param {Event} event\n     *\n     * @private\n     */\n    _handleUpgrade(event) {\n        const db = event.target.result;\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n        // Previous versions of `workbox-expiration` used `this._cacheName`\n        // as the IDBDatabase name.\n        deleteDatabase(this._cacheName);\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        await this._db.put(OBJECT_STORE_NAME, entry);\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const entry = await this._db.get(OBJECT_STORE_NAME, this._getId(url));\n        return entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const entriesToDelete = await this._db.transaction(OBJECT_STORE_NAME, 'readwrite', (txn, done) => {\n            const store = txn.objectStore(OBJECT_STORE_NAME);\n            const request = store.index('timestamp').openCursor(null, 'prev');\n            const entriesToDelete = [];\n            let entriesNotDeletedCount = 0;\n            request.onsuccess = () => {\n                const cursor = request.result;\n                if (cursor) {\n                    const result = cursor.value;\n                    // TODO(philipwalton): once we can use a multi-key index, we\n                    // won't have to check `cacheName` here.\n                    if (result.cacheName === this._cacheName) {\n                        // Delete an entry if it's older than the max age or\n                        // if we already have the max number allowed.\n                        if ((minTimestamp && result.timestamp < minTimestamp) ||\n                            (maxCount && entriesNotDeletedCount >= maxCount)) {\n                            // TODO(philipwalton): we should be able to delete the\n                            // entry right here, but doing so causes an iteration\n                            // bug in Safari stable (fixed in TP). Instead we can\n                            // store the keys of the entries to delete, and then\n                            // delete the separate transactions.\n                            // https://github.com/GoogleChrome/workbox/issues/1978\n                            // cursor.delete();\n                            // We only need to return the URL, not the whole entry.\n                            entriesToDelete.push(cursor.value);\n                        }\n                        else {\n                            entriesNotDeletedCount++;\n                        }\n                    }\n                    cursor.continue();\n                }\n                else {\n                    done(entriesToDelete);\n                }\n            };\n        });\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await this._db.delete(OBJECT_STORE_NAME, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof module:workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n                // TODO: Assert is positive\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n                // TODO: Assert is positive\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds ?\n            Date.now() - (this._maxAgeSeconds * 1000) : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ?\n                    'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - (this._maxAgeSeconds * 1000);\n            return (timestamp < expireOlderThan);\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in the Workbox APIs to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * Whenever a cached request is used or updated, this plugin will look\n * at the used Cache and remove any old or extra requests.\n *\n * When using `maxAgeSeconds`, requests may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached request has been used. If the request has a \"Date\" header, then\n * a light weight expiration check is performed and the request will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof module:workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - (this._maxAgeSeconds * 1000);\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof module:workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const pluginUtils = {\n    filter: (plugins, callbackName) => {\n        return plugins.filter((plugin) => callbackName in plugin);\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './assert.js';\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './getFriendlyURL.js';\nimport { logger } from './logger.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport { WorkboxError } from './WorkboxError.js';\nimport '../_version.js';\n/**\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\n * executes any of those callbacks found in sequence. The final `Request` object\n * returned by the last plugin is treated as the cache key for cache reads\n * and/or writes.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {string} options.mode\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Request>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\n    let effectiveRequest = request;\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\n        if (typeof effectiveRequest === 'string') {\n            effectiveRequest = new Request(effectiveRequest);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(effectiveRequest, Request, {\n                moduleName: 'Plugin',\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\n                isReturnValueProblem: true,\n            });\n        }\n    }\n    return effectiveRequest;\n};\n/**\n * This method will call cacheWillUpdate on the available plugins (or use\n * status === 200) to determine if the Response is safe and valid to cache.\n *\n * @param {Object} options\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\n    let responseToCache = response;\n    let pluginsUsed = false;\n    for (const plugin of plugins) {\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\n            pluginsUsed = true;\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\n            responseToCache = await pluginMethod.call(plugin, {\n                request,\n                response: responseToCache,\n                event,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    assert.isInstance(responseToCache, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n            if (!responseToCache) {\n                break;\n            }\n        }\n    }\n    if (!pluginsUsed) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (responseToCache) {\n                if (responseToCache.status !== 200) {\n                    if (responseToCache.status === 0) {\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\n                            `response. The caching strategy that you're using will not ` +\n                            `cache opaque responses by default.`);\n                    }\n                    else {\n                        logger.debug(`The response for '${request.url}' returned ` +\n                            `a status code of '${response.status}' and won't be cached as a ` +\n                            `result.`);\n                    }\n                }\n            }\n        }\n        responseToCache = responseToCache && responseToCache.status === 200 ?\n            responseToCache : undefined;\n    }\n    return responseToCache ? responseToCache : null;\n};\n/**\n * This is a wrapper around cache.match().\n *\n * @param {Object} options\n * @param {string} options.cacheName Name of the cache to match against.\n * @param {Request} options.request The Request that will be used to look up\n *     cache entries.\n * @param {Event} [options.event] The event that prompted the action.\n * @param {Object} [options.matchOptions] Options passed to cache.match().\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\n * @return {Response} A cached response if available.\n *\n * @private\n * @memberof module:workbox-core\n */\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\n    const cache = await self.caches.open(cacheName);\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'read'\n    });\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\n    if (process.env.NODE_ENV !== 'production') {\n        if (cachedResponse) {\n            logger.debug(`Found a cached response in '${cacheName}'.`);\n        }\n        else {\n            logger.debug(`No cached response found in '${cacheName}'.`);\n        }\n    }\n    for (const plugin of plugins) {\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\n            cachedResponse = await pluginMethod.call(plugin, {\n                cacheName,\n                event,\n                matchOptions,\n                cachedResponse,\n                request: effectiveRequest,\n            });\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachedResponse) {\n                    assert.isInstance(cachedResponse, Response, {\n                        moduleName: 'Plugin',\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                        isReturnValueProblem: true,\n                    });\n                }\n            }\n        }\n    }\n    return cachedResponse;\n};\n/**\n * Wrapper around cache.put().\n *\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\n * `matchOptions` when determining what the old entry is.\n *\n * @param {Object} options\n * @param {string} options.cacheName\n * @param {Request} options.request\n * @param {Response} options.response\n * @param {Event} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @param {Object} [options.matchOptions]\n *\n * @private\n * @memberof module:workbox-core\n */\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\n    if (process.env.NODE_ENV !== 'production') {\n        if (request.method && request.method !== 'GET') {\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\n                url: getFriendlyURL(request.url),\n                method: request.method,\n            });\n        }\n    }\n    const effectiveRequest = await _getEffectiveRequest({\n        plugins, request, mode: 'write'\n    });\n    if (!response) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Cannot cache non-existent response for ` +\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\n        }\n        throw new WorkboxError('cache-put-with-no-response', {\n            url: getFriendlyURL(effectiveRequest.url),\n        });\n    }\n    const responseToCache = await _isResponseSafeToCache({\n        event,\n        plugins,\n        response,\n        request: effectiveRequest,\n    });\n    if (!responseToCache) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\n                `not be cached.`, responseToCache);\n        }\n        return;\n    }\n    const cache = await self.caches.open(cacheName);\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\n    const oldResponse = updatePlugins.length > 0 ?\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\n        null;\n    if (process.env.NODE_ENV !== 'production') {\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\n            `${getFriendlyURL(effectiveRequest.url)}.`);\n    }\n    try {\n        await cache.put(effectiveRequest, responseToCache);\n    }\n    catch (error) {\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n        if (error.name === 'QuotaExceededError') {\n            await executeQuotaErrorCallbacks();\n        }\n        throw error;\n    }\n    for (const plugin of updatePlugins) {\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\n            cacheName,\n            event,\n            oldResponse,\n            newResponse: responseToCache,\n            request: effectiveRequest,\n        });\n    }\n};\nexport const cacheWrapper = {\n    put: putWrapper,\n    match: matchWrapper,\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from './WorkboxError.js';\nimport { logger } from './logger.js';\nimport { assert } from './assert.js';\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\nimport { pluginUtils } from '../utils/pluginUtils.js';\nimport '../_version.js';\n/**\n * Wrapper around the fetch API.\n *\n * Will call requestWillFetch on available plugins.\n *\n * @param {Object} options\n * @param {Request|string} options.request\n * @param {Object} [options.fetchOptions]\n * @param {ExtendableEvent} [options.event]\n * @param {Array<Object>} [options.plugins=[]]\n * @return {Promise<Response>}\n *\n * @private\n * @memberof module:workbox-core\n */\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\n    if (typeof request === 'string') {\n        request = new Request(request);\n    }\n    // We *should* be able to call `await event.preloadResponse` even if it's\n    // undefined, but for some reason, doing so leads to errors in our Node unit\n    // tests. To work around that, explicitly check preloadResponse's value first.\n    if (event instanceof FetchEvent && event.preloadResponse) {\n        const possiblePreloadResponse = await event.preloadResponse;\n        if (possiblePreloadResponse) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Using a preloaded navigation response for ` +\n                    `'${getFriendlyURL(request.url)}'`);\n            }\n            return possiblePreloadResponse;\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isInstance(request, Request, {\n            paramName: 'request',\n            expectedClass: Request,\n            moduleName: 'workbox-core',\n            className: 'fetchWrapper',\n            funcName: 'wrappedFetch',\n        });\n    }\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\n    // If there is a fetchDidFail plugin, we need to save a clone of the\n    // original request before it's either modified by a requestWillFetch\n    // plugin or before the original request's body is consumed via fetch().\n    const originalRequest = failedFetchPlugins.length > 0 ?\n        request.clone() : null;\n    try {\n        for (const plugin of plugins) {\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\n                const requestClone = request.clone();\n                request = await pluginMethod.call(plugin, {\n                    request: requestClone,\n                    event,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (request) {\n                        assert.isInstance(request, Request, {\n                            moduleName: 'Plugin',\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n    }\n    catch (err) {\n        throw new WorkboxError('plugin-error-request-will-fetch', {\n            thrownError: err,\n        });\n    }\n    // The request can be altered by plugins with `requestWillFetch` making\n    // the original request (Most likely from a `fetch` event) to be different\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\n    const pluginFilteredRequest = request.clone();\n    try {\n        let fetchResponse;\n        // See https://github.com/GoogleChrome/workbox/issues/1796\n        if (request.mode === 'navigate') {\n            fetchResponse = await fetch(request);\n        }\n        else {\n            fetchResponse = await fetch(request, fetchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\n                `status '${fetchResponse.status}'.`);\n        }\n        for (const plugin of plugins) {\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\n                    .call(plugin, {\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n                if (process.env.NODE_ENV !== 'production') {\n                    if (fetchResponse) {\n                        assert.isInstance(fetchResponse, Response, {\n                            moduleName: 'Plugin',\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\n                            isReturnValueProblem: true,\n                        });\n                    }\n                }\n            }\n        }\n        return fetchResponse;\n    }\n    catch (error) {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Network request for ` +\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\n        }\n        for (const plugin of failedFetchPlugins) {\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\n                error,\n                event,\n                originalRequest: originalRequest.clone(),\n                request: pluginFilteredRequest.clone(),\n            });\n        }\n        throw error;\n    }\n};\nconst fetchWrapper = {\n    fetch: wrappedFetch,\n};\nexport { fetchWrapper };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache}\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass NetworkFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} options.networkTimeoutSeconds If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: 'NetworkFirst',\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'NetworkFirst',\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, event, logs });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({ timeoutId, request, event, logs });\n        promises.push(networkPromise);\n        // Promise.race() will resolve as soon as the first promise resolves.\n        let response = await Promise.race(promises);\n        // If Promise.race() resolved with null, it might be due to a network\n        // timeout + a cache miss. If that were to happen, we'd rather wait until\n        // the networkPromise resolves instead of returning null.\n        // Note that it's fine to await an already-resolved promise, so we don't\n        // have to check to see if it's still \"in flight\".\n        if (!response) {\n            response = await networkPromise;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('NetworkFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, event }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await this._respondFromCache({ request, event }));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, event }) {\n        let error;\n        let response;\n        try {\n            response = await fetchWrapper.fetch({\n                request,\n                event,\n                fetchOptions: this._fetchOptions,\n                plugins: this._plugins,\n            });\n        }\n        catch (err) {\n            error = err;\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await this._respondFromCache({ request, event });\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this._cacheName}'` +\n                        ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this._cacheName}' cache.`);\n                }\n            }\n        }\n        else {\n            // Keep the service worker alive while we put the request in the cache\n            const responseClone = response.clone();\n            const cachePut = cacheWrapper.put({\n                cacheName: this._cacheName,\n                request,\n                response: responseClone,\n                event,\n                plugins: this._plugins,\n            });\n            if (event) {\n                try {\n                    // The event has been responded to so we can keep the SW alive to\n                    // respond to the request\n                    event.waitUntil(cachePut);\n                }\n                catch (err) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        return response;\n    }\n    /**\n     * Used if the network timeouts or fails to make the request.\n     *\n     * @param {Object} options\n     * @param {Request} request The request to match in the cache\n     * @param {Event} [options.event]\n     * @return {Promise<Object>}\n     *\n     * @private\n     */\n    _respondFromCache({ event, request }) {\n        return cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n    }\n}\nexport { NetworkFirst };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:cacheable-response:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport './_version.js';\n/**\n * This class allows you to set up rules determining what\n * status codes and/or headers need to be present in order for a\n * [`Response`](https://developer.mozilla.org/en-US/docs/Web/API/Response)\n * to be considered cacheable.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponse {\n    /**\n     * To construct a new CacheableResponse instance you must provide at least\n     * one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.statuses || config.headers)) {\n                throw new WorkboxError('statuses-or-headers-required', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.statuses) {\n                assert.isArray(config.statuses, {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.statuses',\n                });\n            }\n            if (config.headers) {\n                assert.isType(config.headers, 'object', {\n                    moduleName: 'workbox-cacheable-response',\n                    className: 'CacheableResponse',\n                    funcName: 'constructor',\n                    paramName: 'config.headers',\n                });\n            }\n        }\n        this._statuses = config.statuses;\n        this._headers = config.headers;\n    }\n    /**\n     * Checks a response to see whether it's cacheable or not, based on this\n     * object's configuration.\n     *\n     * @param {Response} response The response whose cacheability is being\n     * checked.\n     * @return {boolean} `true` if the `Response` is cacheable, and `false`\n     * otherwise.\n     */\n    isResponseCacheable(response) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(response, Response, {\n                moduleName: 'workbox-cacheable-response',\n                className: 'CacheableResponse',\n                funcName: 'isResponseCacheable',\n                paramName: 'response',\n            });\n        }\n        let cacheable = true;\n        if (this._statuses) {\n            cacheable = this._statuses.includes(response.status);\n        }\n        if (this._headers && cacheable) {\n            cacheable = Object.keys(this._headers).some((headerName) => {\n                return response.headers.get(headerName) === this._headers[headerName];\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (!cacheable) {\n                logger.groupCollapsed(`The request for ` +\n                    `'${getFriendlyURL(response.url)}' returned a response that does ` +\n                    `not meet the criteria for being cached.`);\n                logger.groupCollapsed(`View cacheability criteria here.`);\n                logger.log(`Cacheable statuses: ` +\n                    JSON.stringify(this._statuses));\n                logger.log(`Cacheable headers: ` +\n                    JSON.stringify(this._headers, null, 2));\n                logger.groupEnd();\n                const logFriendlyHeaders = {};\n                response.headers.forEach((value, key) => {\n                    logFriendlyHeaders[key] = value;\n                });\n                logger.groupCollapsed(`View response status and headers here.`);\n                logger.log(`Response status: ` + response.status);\n                logger.log(`Response headers: ` +\n                    JSON.stringify(logFriendlyHeaders, null, 2));\n                logger.groupEnd();\n                logger.groupCollapsed(`View full response details here.`);\n                logger.log(response.headers);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n            }\n        }\n        return cacheable;\n    }\n}\nexport { CacheableResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheableResponse } from './CacheableResponse.js';\nimport './_version.js';\n/**\n * A class implementing the `cacheWillUpdate` lifecycle callback. This makes it\n * easier to add in cacheability checks to requests made via Workbox's built-in\n * strategies.\n *\n * @memberof module:workbox-cacheable-response\n */\nclass CacheableResponsePlugin {\n    /**\n     * To construct a new CacheableResponsePlugin instance you must provide at\n     * least one of the `config` properties.\n     *\n     * If both `statuses` and `headers` are specified, then both conditions must\n     * be met for the `Response` to be considered cacheable.\n     *\n     * @param {Object} config\n     * @param {Array<number>} [config.statuses] One or more status codes that a\n     * `Response` can have and be considered cacheable.\n     * @param {Object<string,string>} [config.headers] A mapping of header names\n     * and expected values that a `Response` can have and be considered cacheable.\n     * If multiple headers are provided, only one needs to be present.\n     */\n    constructor(config) {\n        /**\n         * @param {Object} options\n         * @param {Response} options.response\n         * @return {Response|null}\n         * @private\n         */\n        this.cacheWillUpdate = async ({ response }) => {\n            if (this._cacheableResponse.isResponseCacheable(response)) {\n                return response;\n            }\n            return null;\n        };\n        this._cacheableResponse = new CacheableResponse(config);\n    }\n}\nexport { CacheableResponsePlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#stale-while-revalidate}\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses]{@link https://developers.google.com/web/tools/workbox/guides/handle-third-party-requests}.\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS]{@link https://enable-cors.org/}.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass StaleWhileRevalidate {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        if (options.plugins) {\n            const isUsingCacheWillUpdate = options.plugins.some((plugin) => !!plugin.cacheWillUpdate);\n            this._plugins = isUsingCacheWillUpdate ?\n                options.plugins : [cacheOkAndOpaquePlugin, ...options.plugins];\n        }\n        else {\n            // No plugins passed in, use the default plugin.\n            this._plugins = [cacheOkAndOpaquePlugin];\n        }\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'StaleWhileRevalidate',\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = this._getFromNetwork({ request, event });\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n            if (event) {\n                try {\n                    event.waitUntil(fetchAndCachePromise);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.warn(`Unable to ensure service worker stays alive when ` +\n                            `updating cache for '${getFriendlyURL(request.url)}'.`);\n                    }\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                response = await fetchAndCachePromise;\n            }\n            catch (err) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('StaleWhileRevalidate', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Event} [options.event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork({ request, event }) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: response.clone(),\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first]{@link https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-falling-back-to-network}\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @memberof module:workbox-strategies\n */\nclass CacheFirst {\n    /**\n     * @param {Object} options\n     * @param {string} options.cacheName Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * [workbox-core]{@link module:workbox-core.cacheNames}.\n     * @param {Array<Object>} options.plugins [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} options.fetchOptions Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of all fetch() requests made by this strategy.\n     * @param {Object} options.matchOptions [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        this._cacheName = cacheNames.getRuntimeName(options.cacheName);\n        this._plugins = options.plugins || [];\n        this._fetchOptions = options.fetchOptions;\n        this._matchOptions = options.matchOptions;\n    }\n    /**\n     * This method will perform a request strategy and follows an API that\n     * will work with the\n     * [Workbox Router]{@link module:workbox-routing.Router}.\n     *\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {Event} [options.event] The event that triggered the request.\n     * @return {Promise<Response>}\n     */\n    async handle({ event, request }) {\n        const logs = [];\n        if (typeof request === 'string') {\n            request = new Request(request);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: 'CacheFirst',\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await cacheWrapper.match({\n            cacheName: this._cacheName,\n            request,\n            event,\n            matchOptions: this._matchOptions,\n            plugins: this._plugins,\n        });\n        let error;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this._cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await this._getFromNetwork(request, event);\n            }\n            catch (err) {\n                error = err;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this._cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart('CacheFirst', request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n    /**\n     * Handles the network and cache part of CacheFirst.\n     *\n     * @param {Request} request\n     * @param {Event} [event]\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getFromNetwork(request, event) {\n        const response = await fetchWrapper.fetch({\n            request,\n            event,\n            fetchOptions: this._fetchOptions,\n            plugins: this._plugins,\n        });\n        // Keep the service worker while we put the request to the cache\n        const responseClone = response.clone();\n        const cachePutPromise = cacheWrapper.put({\n            cacheName: this._cacheName,\n            request,\n            response: responseClone,\n            event,\n            plugins: this._plugins,\n        });\n        if (event) {\n            try {\n                event.waitUntil(cachePutPromise);\n            }\n            catch (error) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.warn(`Unable to ensure service worker stays alive when ` +\n                        `updating cache for '${getFriendlyURL(request.url)}'.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof module:workbox-core\n */\nasync function copyResponse(response, modifier) {\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream() ?\n        clonedResponse.body : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:5.1.4'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message += ` ${alreadyPrecachedCount} ` +\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof module:workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {string} [cacheName] An optional name for the cache, to override\n     * the default precache name.\n     */\n    constructor(cacheName) {\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\n     * } entries Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\n                'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * @param {Object} options\n     * @param {Event} [options.event] The install event (if needed).\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\n     * and caching during install.\n     * @return {Promise<module:workbox-precaching.InstallResult>}\n     */\n    async install({ event, plugins } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            if (plugins) {\n                assert.isArray(plugins, {\n                    moduleName: 'workbox-precaching',\n                    className: 'PrecacheController',\n                    funcName: 'install',\n                    paramName: 'plugins',\n                });\n            }\n        }\n        const toBePrecached = [];\n        const alreadyPrecached = [];\n        const cache = await self.caches.open(this._cacheName);\n        const alreadyCachedRequests = await cache.keys();\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\n            if (existingCacheKeys.has(cacheKey)) {\n                alreadyPrecached.push(url);\n            }\n            else {\n                toBePrecached.push({ cacheKey, url });\n            }\n        }\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n            const cacheMode = this._urlsToCacheModes.get(url);\n            return this._addURLToCache({\n                cacheKey,\n                cacheMode,\n                event,\n                integrity,\n                plugins,\n                url,\n            });\n        });\n        await Promise.all(precacheRequests);\n        const updatedURLs = toBePrecached.map((item) => item.url);\n        if (process.env.NODE_ENV !== 'production') {\n            printInstallDetails(updatedURLs, alreadyPrecached);\n        }\n        return {\n            updatedURLs,\n            notUpdatedURLs: alreadyPrecached,\n        };\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\n     */\n    async activate() {\n        const cache = await self.caches.open(this._cacheName);\n        const currentlyCachedRequests = await cache.keys();\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n        const deletedURLs = [];\n        for (const request of currentlyCachedRequests) {\n            if (!expectedCacheKeys.has(request.url)) {\n                await cache.delete(request);\n                deletedURLs.push(request.url);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            printCleanupDetails(deletedURLs);\n        }\n        return { deletedURLs };\n    }\n    /**\n     * Requests the entry and saves it to the cache if the response is valid.\n     * By default, any response with a status code of less than 400 (including\n     * opaque responses) is considered valid.\n     *\n     * If you need to use custom criteria to determine what's valid and what\n     * isn't, then pass in an item in `options.plugins` that implements the\n     * `cacheWillUpdate()` lifecycle event.\n     *\n     * @private\n     * @param {Object} options\n     * @param {string} options.cacheKey The string to use a cache key.\n     * @param {string} options.url The URL to fetch and cache.\n     * @param {string} [options.cacheMode] The cache mode for the network request.\n     * @param {Event} [options.event] The install event (if passed).\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\n     * fetch and caching.\n     * @param {string} [options.integrity] The value to use for the `integrity`\n     * field when making the request.\n     */\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\n        const request = new Request(url, {\n            integrity,\n            cache: cacheMode,\n            credentials: 'same-origin',\n        });\n        let response = await fetchWrapper.fetch({\n            event,\n            plugins,\n            request,\n        });\n        // Allow developers to override the default logic about what is and isn't\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\n        // a `CacheableResponsePlugin` instance.\n        let cacheWillUpdatePlugin;\n        for (const plugin of (plugins || [])) {\n            if ('cacheWillUpdate' in plugin) {\n                cacheWillUpdatePlugin = plugin;\n            }\n        }\n        const isValidResponse = cacheWillUpdatePlugin ?\n            // Use a callback if provided. It returns a truthy value if valid.\n            // NOTE: invoke the method on the plugin instance so the `this` context\n            // is correct.\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\n            // Otherwise, default to considering any response status under 400 valid.\n            // This includes, by default, considering opaque responses valid.\n            response.status < 400;\n        // Consider this a failure, leading to the `install` handler failing, if\n        // we get back an invalid response.\n        if (!isValidResponse) {\n            throw new WorkboxError('bad-precaching-response', {\n                url,\n                status: response.status,\n            });\n        }\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        if (response.redirected) {\n            response = await copyResponse(response);\n        }\n        await cacheWrapper.put({\n            event,\n            plugins,\n            response,\n            // `request` already uses `url`. We may be able to reuse it.\n            request: cacheKey === url ? request : new Request(cacheKey),\n            cacheName: this._cacheName,\n            matchOptions: {\n                ignoreSearch: true,\n            },\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this._cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that can be used within a\n     * {@link module:workbox-routing.Route} that will find a response for the\n     * incoming request against the precache.\n     *\n     * If for an unexpected reason there is a cache miss for the request,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandler(fallbackToNetwork = true) {\n        return async ({ request }) => {\n            try {\n                const response = await this.matchPrecache(request);\n                if (response) {\n                    return response;\n                }\n                // This shouldn't normally happen, but there are edge cases:\n                // https://github.com/GoogleChrome/workbox/issues/1441\n                throw new WorkboxError('missing-precache-entry', {\n                    cacheName: this._cacheName,\n                    url: request instanceof Request ? request.url : request,\n                });\n            }\n            catch (error) {\n                if (fallbackToNetwork) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        logger.debug(`Unable to respond with precached response. ` +\n                            `Falling back to network.`, error);\n                    }\n                    return fetch(request);\n                }\n                throw error;\n            }\n        };\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * If for an unexpected reason there is a cache miss when looking up `url`,\n     * this will fall back to retrieving the `Response` via `fetch()` when\n     * `fallbackToNetwork` is `true`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n     * response from the network if there's a precache miss.\n     * @return {module:workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        const handler = this.createHandler(fallbackToNetwork);\n        const request = new Request(url);\n        return () => handler({ request });\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof module:workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\nimport { generateURLVariations } from './generateURLVariations.js';\nimport '../_version.js';\n/**\n * This function will take the request URL and manipulate it based on the\n * configuration options.\n *\n * @param {string} url\n * @param {Object} options\n * @return {string} Returns the URL in the cache that matches the request,\n * if possible.\n *\n * @private\n */\nexport const getCacheKeyForURL = (url, options) => {\n    const precacheController = getOrCreatePrecacheController();\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n    for (const possibleURL of generateURLVariations(url, options)) {\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\n        if (possibleCacheKey) {\n            return possibleCacheKey;\n        }\n    }\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport '../_version.js';\n/**\n * Adds a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * NOTE: when called more than once this method will replace the previously set\n * configuration options. Calling it more than once is not recommended outside\n * of tests.\n *\n * @private\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n */\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\n    const cacheName = cacheNames.getPrecacheName();\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('fetch', ((event) => {\n        const precachedURL = getCacheKeyForURL(event.request.url, {\n            cleanURLs,\n            directoryIndex,\n            ignoreURLParametersMatching,\n            urlManipulation,\n        });\n        if (!precachedURL) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` +\n                    getFriendlyURL(event.request.url));\n            }\n            return;\n        }\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\n            return cache.match(precachedURL);\n        }).then((cachedResponse) => {\n            if (cachedResponse) {\n                return cachedResponse;\n            }\n            // Fall back to the network if we don't have a cached response\n            // (perhaps due to manual cache cleanup).\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\n                    `Falling back to the network instead.`);\n            }\n            return fetch(precachedURL);\n        });\n        if (process.env.NODE_ENV !== 'production') {\n            responsePromise = responsePromise.then((response) => {\n                // Workbox is going to handle the route.\n                // print the routing details to the console.\n                logger.groupCollapsed(`Precaching is responding to: ` +\n                    getFriendlyURL(event.request.url));\n                logger.log(`Serving the precached url: ${precachedURL}`);\n                logger.groupCollapsed(`View request details here.`);\n                logger.log(event.request);\n                logger.groupEnd();\n                logger.groupCollapsed(`View response details here.`);\n                logger.log(response);\n                logger.groupEnd();\n                logger.groupEnd();\n                return response;\n            });\n        }\n        event.respondWith(responsePromise);\n    }));\n};\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addFetchListener } from './utils/addFetchListener.js';\nimport './_version.js';\nlet listenerAdded = false;\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options]\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n * check cache entries for a URLs ending with '/' to see if there is a hit when\n * appending the `directoryIndex` value.\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\n * array of regex's to remove search params when looking for a cache match.\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n * check the cache for the URL with a `.html` added to the end of the end.\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\n * This is a function that should take a URL and return an array of\n * alternative URLs that should be checked for precache matches.\n *\n * @memberof module:workbox-precaching\n */\nfunction addRoute(options) {\n    if (!listenerAdded) {\n        addFetchListener(options);\n        listenerAdded = true;\n    }\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst plugins = [];\nexport const precachePlugins = {\n    /*\n     * @return {Array}\n     * @private\n     */\n    get() {\n        return plugins;\n    },\n    /*\n     * @param {Array} newPlugins\n     * @private\n     */\n    add(newPlugins) {\n        plugins.push(...newPlugins);\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { precachePlugins } from './utils/precachePlugins.js';\nimport './_version.js';\nconst installListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    const plugins = precachePlugins.get();\n    event.waitUntil(precacheController.install({ event, plugins })\n        .catch((error) => {\n        if (process.env.NODE_ENV !== 'production') {\n            logger.error(`Service worker installation failed. It will ` +\n                `be retried automatically during the next navigation.`);\n        }\n        // Re-throw the error to ensure installation fails.\n        throw error;\n    }));\n};\nconst activateListener = (event) => {\n    const precacheController = getOrCreatePrecacheController();\n    event.waitUntil(precacheController.activate());\n};\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof module:workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.addToCacheList(entries);\n    if (entries.length > 0) {\n        // NOTE: these listeners will only be added once (even if the `precache()`\n        // method is called multiple times) because event listeners are implemented\n        // as a set, where each listener must be unique.\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('install', installListener);\n        self.addEventListener('activate', activateListener);\n    }\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * [precache()]{@link module:workbox-precaching.precache} and\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\n *\n * @memberof module:workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","import {registerRoute as workbox_routing_registerRoute} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-routing/registerRoute.mjs';\nimport {ExpirationPlugin as workbox_expiration_ExpirationPlugin} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-expiration/ExpirationPlugin.mjs';\nimport {NetworkFirst as workbox_strategies_NetworkFirst} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-strategies/NetworkFirst.mjs';\nimport {CacheableResponsePlugin as workbox_cacheable_response_CacheableResponsePlugin} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-cacheable-response/CacheableResponsePlugin.mjs';\nimport {StaleWhileRevalidate as workbox_strategies_StaleWhileRevalidate} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-strategies/StaleWhileRevalidate.mjs';\nimport {CacheFirst as workbox_strategies_CacheFirst} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-strategies/CacheFirst.mjs';\nimport {precacheAndRoute as workbox_precaching_precacheAndRoute} from '/Users/MassimoBergamin/CodeWorks/Senior/Thesis/RemoteTrainerFrontend/fitome/node_modules/workbox-precaching/precacheAndRoute.mjs';/**\n * Welcome to your Workbox-powered service worker!\n *\n * You'll need to register this file in your web app.\n * See https://goo.gl/nhQhGp\n *\n * The rest of the code is auto-generated. Please don't update this file\n * directly; instead, make changes to your Workbox build configuration\n * and re-run your build process.\n * See https://goo.gl/2aRDsh\n */\n\n\n\n\n\n\n\n\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n\n\n\n/**\n * The precacheAndRoute() method efficiently caches and responds to\n * requests for URLs in the manifest.\n * See https://goo.gl/S9QRab\n */\nworkbox_precaching_precacheAndRoute([\n  {\n    \"url\": \"_next/static/chunks/0.js\",\n    \"revision\": \"3280df59fc105cba4bddde4cdb0f95ab\"\n  },\n  {\n    \"url\": \"_next/static/chunks/amp.js\",\n    \"revision\": \"40babe29789e38841b9f15010ee93fbc\"\n  },\n  {\n    \"url\": \"_next/static/chunks/pages/_error.js\",\n    \"revision\": \"c830c8f95e96db05e10a77457fb99267\"\n  },\n  {\n    \"url\": \"_next/static/chunks/polyfills.js\",\n    \"revision\": \"af8daaa37fc9f6294cf821d2d0e0dc05\"\n  },\n  {\n    \"url\": \"_next/static/chunks/react-refresh.js\",\n    \"revision\": \"b579ea82dc4f58e1c3c63f2bb7108893\"\n  },\n  {\n    \"url\": \"_next/static/chunks/webpack.js\",\n    \"revision\": \"d356116737664e929c95d365d51f8b89\"\n  },\n  {\n    \"url\": \"_next/static/development/_buildManifest.js\",\n    \"revision\": \"64f63a5b6be4d8de5ec6ea86df69d336\"\n  },\n  {\n    \"url\": \"_next/static/development/_ssgManifest.js\",\n    \"revision\": \"abee47769bf307639ace4945f9cfd4ff\"\n  },\n  {\n    \"url\": \"_next/static/webpack/48c898170fe050e02ec5.hot-update.json\",\n    \"revision\": \"e54d52ca6773439594a69c7f800184cd\"\n  },\n  {\n    \"url\": \"_next/static/webpack/pages/signup.48c898170fe050e02ec5.hot-update.js\",\n    \"revision\": \"1d83ddbdd89289c49fafdccfdf72390f\"\n  }\n], {});\n\n\n\n\nworkbox_routing_registerRoute(/^https?.*/, new workbox_strategies_NetworkFirst({ \"cacheName\":\"offlineCache\", plugins: [new workbox_expiration_ExpirationPlugin({ maxEntries: 200, purgeOnQuotaError: true })] }), 'GET');\nworkbox_routing_registerRoute(/\\.(json|js|css)$/, new workbox_strategies_StaleWhileRevalidate({ \"cacheName\":\"weather-cache\", plugins: [new workbox_expiration_ExpirationPlugin({ maxEntries: 50, maxAgeSeconds: 86400, purgeOnQuotaError: true }), new workbox_cacheable_response_CacheableResponsePlugin({ statuses: [ 0, 200 ] })] }), 'GET');\nworkbox_routing_registerRoute(/\\.(svg|png|jpe?g)$/, new workbox_strategies_CacheFirst({ \"cacheName\":\"image-cache\", plugins: [new workbox_expiration_ExpirationPlugin({ maxEntries: 50, maxAgeSeconds: 2592000, purgeOnQuotaError: true }), new workbox_cacheable_response_CacheableResponsePlugin({ statuses: [ 0, 200 ] })] }), 'GET');\nworkbox_routing_registerRoute(/^http:localhost:3000\\/api/, new workbox_strategies_NetworkFirst({ \"cacheName\":\"api-cache\",\"networkTimeoutSeconds\":10, plugins: [new workbox_expiration_ExpirationPlugin({ maxEntries: 50, maxAgeSeconds: 3600, purgeOnQuotaError: true }), new workbox_cacheable_response_CacheableResponsePlugin({ statuses: [ 0, 200 ] })] }), 'GET');\n\n\n\n\n"],"names":["self","_","e","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","join","api","loggerMethods","Object","keys","key","messages","paramName","validValueDescription","value","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","url","status","cacheName","generatorFunction","code","details","messageGenerator","WorkboxError","constructor","errorCode","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","defaultMethod","validMethods","normalizeHandler","handler","assert","handle","Route","match","RegExpRoute","regExp","RegExp","result","exec","href","origin","location","index","slice","getFriendlyURL","urlObj","URL","String","replace","Router","_routes","Map","routes","addFetchListener","addEventListener","event","request","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","Promise","all","map","Request","waitUntil","ports","then","postMessage","protocol","startsWith","params","route","findMatchingRoute","debugMessages","push","_defaultHandler","forEach","msg","err","reject","_catchHandler","catch","get","matchResult","length","undefined","setDefaultHandler","setCatchHandler","registerRoute","has","set","unregisterRoute","routeIndex","indexOf","splice","defaultRouter","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","pathname","wildcards","matchCallback","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","filter","eachCacheNameDetail","fn","cacheNames","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","dontWaitFor","promise","quotaErrorCallbacks","Set","registerQuotaErrorCallback","callback","add","DBWrapper","version","onupgradeneeded","onversionchange","_db","_name","_version","_onupgradeneeded","_onversionchange","close","db","open","resolve","openRequestTimedOut","setTimeout","OPEN_TIMEOUT","openRequest","indexedDB","onerror","evt","transaction","abort","onsuccess","bind","getKey","storeName","query","getAllKeys","getAll","count","getAllMatching","entries","includeKeys","direction","txn","done","store","objectStore","target","results","openCursor","cursor","continue","storeNames","onabort","oncomplete","_call","objStore","apply","prototype","methodsToWrap","readonly","readwrite","mode","methods","IDBObjectStore","deleteDatabase","onblocked","DB_NAME","OBJECT_STORE_NAME","normalizeURL","unNormalizedUrl","hash","CacheTimestampsModel","_cacheName","_handleUpgrade","createObjectStore","keyPath","createIndex","unique","setTimestamp","timestamp","id","_getId","put","getTimestamp","expireEntries","minTimestamp","maxCount","entriesToDelete","entriesNotDeletedCount","urlsDeleted","delete","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_timestampModel","Date","now","urlsExpired","cache","caches","updateTimestamp","isURLExpired","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","_config","_cacheExpirations","purgeOnQuotaError","deleteCacheAndMetadata","dateHeaderTimestamp","_getDateHeaderTimestamp","headers","dateHeader","parsedDate","headerTime","getTime","isNaN","executeQuotaErrorCallbacks","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","cacheKeyWillBeUsedPlugins","effectiveRequest","call","_isResponseSafeToCache","response","responseToCache","pluginsUsed","pluginMethod","Response","matchWrapper","matchOptions","putWrapper","updatePlugins","oldResponse","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","strategyStart","strategyName","printFinalResponse","cacheOkAndOpaquePlugin","cacheWillUpdate","NetworkFirst","options","isUsingCacheWillUpdate","some","_plugins","_networkTimeoutSeconds","networkTimeoutSeconds","_fetchOptions","_matchOptions","logs","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","_respondFromCache","clearTimeout","responseClone","cachePut","CacheableResponse","statuses","_statuses","_headers","isResponseCacheable","cacheable","headerName","logFriendlyHeaders","CacheableResponsePlugin","_cacheableResponse","StaleWhileRevalidate","fetchAndCachePromise","_getFromNetwork","cachePutPromise","CacheFirst","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","urlsToWarnAbout","cacheMode","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","precacheRequests","_addURLToCache","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","credentials","cacheWillUpdatePlugin","isValidResponse","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","urlsToCacheKeys","possibleURL","possibleCacheKey","precachedURL","listenerAdded","addRoute","precachePlugins","newPlugins","installListener","activateListener","precacheAndRoute","skipWaiting","workbox_precaching_precacheAndRoute","workbox_routing_registerRoute","workbox_strategies_NetworkFirst","workbox_expiration_ExpirationPlugin","workbox_strategies_StaleWhileRevalidate","workbox_cacheable_response_CacheableResponsePlugin","workbox_strategies_CacheFirst"],"mappings":"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"}